
---

var:
  leader-elector-git-repo-config: &leader-elector-git-repo-config
    uri: https://github.com/instana/leader-elector.git
    username: ((instanacd-github-api-token))
    password: x-oauth-basic
    branch: &build-branch ((branch))
    git_config:
      - name: user.name
        value: &gh-user Stan
      - name: user.email
        value: &gh-email stan@instana.com

resource_types:

  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

  - name: codebuild
    type: registry-image
    source:
      repository: cedricziel/concourse-codebuild-resource
      tag: "0.1.14"

resources:

  - name: pipeline-source
    type: git
    icon: github
    source:
      <<: *leader-elector-git-repo-config
      paths:
      - ci/

  - name: leader-elector-repository
    type: git
    icon: github
    source:
      <<: *leader-elector-git-repo-config

  - name: leader-elector-version
    type: semver
    icon: alpha
    source: &leader-elector-version-config
      <<: *leader-elector-git-repo-config
      driver: git
      file: NEXT_VERSION
      commit_message: Bump the NEXT leader-elector version to %version%

  - name: build-bundle
    type: s3
    icon: zip-disk
    source:
      bucket: instana-agent-leader-elector-codebuild
      versioned_file: context.zip
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
      region_name: us-west-2
      skip_download: true

  - name: codebuild-containers
    type: codebuild
    icon: aws
    source:
      project: instana-leader-elector-codebuild
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

  - name: leader-elector-image-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/leader-elector
      tag: latest-amd64
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: leader-elector-image-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/leader-elector
      tag: latest-arm64
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: leader-elector-image-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/leader-elector
      tag: latest-s390x
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: leader-elector-image-ppc64le
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/leader-elector
      tag: latest-ppc64le
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: slack-alert-team-agent
    type: slack-notification
    source:
      url: ((slack-webhook-team-agent.webhoook_url))

jobs:
  - name: self-update
    max_in_flight: 1
    plan:
      - get: pipeline-source
        trigger: true
      - set_pipeline: self
        file: pipeline-source/ci/pipeline.yml
        vars:
          branch: ((branch))

  - name: prepare-build-bundle
    max_in_flight: 1
    plan:
      - get: leader-elector-repository
      - task: package-build-bundle
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ubuntu
              tag: focal
          inputs:
            - name: leader-elector-repository
              path: .
          run:
            path: bash
            args:
              - -ce
              - |
                date
                apt update
                apt install -yqq zip unzip tar
                zip -r target/context.zip .
          outputs:
            - name: target
      - put: build-bundle
        params:
          file: target/context.zip

  - name: multiarch-leader-elector-images-build
    max_in_flight: 1
    plan:
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: leader-elector-repository
      - get: leader-elector-version

      - load_var: new_leader_elector_version
        file: leader-elector-version/number
        reveal: true
      - load_var: commit-sha
        file: leader-elector-repository/.git/HEAD
        reveal: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true

      # spin off AWS CloudBuild jobs to build operator
      # images for the different target platforms:
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-containers
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ELECTOR_VERSION: ((.:new_leader_elector_version))
                  COMMIT_SHA: ((.:commit-sha))
      # upload the AWS CloudBuild built images to GCR:
      - in_parallel:
          fail_fast: true
          steps:
            - put: leader-elector-image-amd64
              params:
                  image: codebuild-containers/artifacts/amd64-image.tar
                  additional_tags: codebuild-containers/artifacts/amd64-tag
            - put: leader-elector-image-arm64
              params:
                  image: codebuild-containers/artifacts/arm64-image.tar
                  additional_tags: codebuild-containers/artifacts/arm64-tag
            - put: leader-elector-image-s390x
              params:
                  image: codebuild-containers/artifacts/s390x-image.tar
                  additional_tags: codebuild-containers/artifacts/s390x-tag
            - put: leader-elector-image-ppc64le
              params:
                  image: codebuild-containers/artifacts/ppc64le-image.tar
                  additional_tags: codebuild-containers/artifacts/ppc64le-tag

  - name: multiarch-leader-elector-manifest-publish
    max_in_flight: 1
    plan:
      - get: leader-elector-repository
        trigger: true
        passed: [ multiarch-leader-elector-images-build ]
      - get: leader-elector-version
      - get: leader-elector-image-amd64
        params: { skip_download: true }
        passed: [ multiarch-leader-elector-images-build ]
      - get: leader-elector-image-arm64
        params: { skip_download: true }
        passed: [ multiarch-leader-elector-images-build ]
      - get: leader-elector-image-s390x
        params: { skip_download: true }
        passed: [ multiarch-leader-elector-images-build ]
      - get: leader-elector-image-ppc64le
        params: { skip_download: true }
        passed: [ multiarch-leader-elector-images-build ]

      - load_var: new_leader_elector_version
        file: leader-elector-version/number
        reveal: true
      - load_var: commit-sha
        file: leader-elector-repository/.git/HEAD
        reveal: true

      - task: build-multiarch-manifest
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: karlkfi/concourse-dcind
          inputs:
            - name: leader-elector-repository
          outputs:
            - name: message
          params:
            DOCKER_CLI_EXPERIMENTAL: enabled
            COMMIT_SHA: ((.:commit-sha))
            VERSION: ((.:new_leader_elector_version))
            JSON_KEY: ((project-berlin-tests-gcp-instana-qa))
            DOCKER_HUB_PASSWORD: ((dockerhub-instanacicd.password))
            DOCKER_HUB_USERNAME: ((dockerhub-instanacicd.user))
          run:
            path: entrypoint.sh
            args:
              - bash
              - -ceu
              - |
                set -e
                echo $JSON_KEY > key.json
                cat key.json | docker login -u _json_key --password-stdin https://gcr.io
                echo "((containers-instana-io-creds.password))" | docker login -u ((containers-instana-io-creds.username)) --password-stdin https://containers.instana.io
                echo "$DOCKER_HUB_PASSWORD" | docker login -u $DOCKER_HUB_USERNAME --password-stdin https://index.docker.io/v1/

                echo "---> Pulling source containers"
                docker pull "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-amd64"
                docker pull "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-s390x"
                docker pull "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-arm64"
                docker pull "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-ppc64le"


                echo "---> **** Public release, publishing to docker hub & Containers.instana.io registry. ****"

                echo "---> re-tagging images for docker.io"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-amd64" "docker.io/instana/leader-elector:amd64-$VERSION"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-s390x" "docker.io/instana/leader-elector:s390x-$VERSION"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-arm64" "docker.io/instana/leader-elector:arm64-$VERSION"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-ppc64le" "docker.io/instana/leader-elector:ppc64le-$VERSION"

                echo "---> pushing images to docker.io"
                docker push "docker.io/instana/leader-elector:amd64-$VERSION"
                docker push "docker.io/instana/leader-elector:s390x-$VERSION"
                docker push "docker.io/instana/leader-elector:arm64-$VERSION"
                docker push "docker.io/instana/leader-elector:ppc64le-$VERSION"

                echo "---> Building multi-architectural manifest on docker.io"
                docker manifest create "docker.io/instana/leader-elector:$VERSION" \
                  --amend "docker.io/instana/leader-elector:amd64-$VERSION" \
                  --amend "docker.io/instana/leader-elector:s390x-$VERSION" \
                  --amend "docker.io/instana/leader-elector:arm64-$VERSION" \
                  --amend "docker.io/instana/leader-elector:ppc64le-$VERSION"

                echo "---> Pushing multi-architectural manifest to docker.io"
                docker manifest push --purge "docker.io/instana/leader-elector:$VERSION"

                echo "---> re-tagging images for containers.instana.io"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-amd64" "containers.instana.io/instana/leader-elector:amd64-$VERSION"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-s390x" "containers.instana.io/instana/leader-elector:s390x-$VERSION"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-arm64" "containers.instana.io/instana/leader-elector:arm64-$VERSION"
                docker tag "gcr.io/instana-agent-qa/leader-elector:$VERSION-$COMMIT_SHA-ppc64le" "containers.instana.io/instana/leader-elector:ppc64le-$VERSION"

                echo "---> pushing images to containers.instana.io"
                docker push "containers.instana.io/instana/leader-elector:amd64-$VERSION"
                docker push "containers.instana.io/instana/leader-elector:s390x-$VERSION"
                docker push "containers.instana.io/instana/leader-elector:arm64-$VERSION"
                docker push "containers.instana.io/instana/leader-elector:ppc64le-$VERSION"

                echo "---> Building multi-architectural manifest on containers.instana.io"
                docker manifest create "containers.instana.io/instana/leader-elector:$VERSION" \
                  --amend "containers.instana.io/instana/leader-elector:amd64-$VERSION" \
                  --amend "containers.instana.io/instana/leader-elector:s390x-$VERSION" \
                  --amend "containers.instana.io/instana/leader-elector:arm64-$VERSION" \
                  --amend "containers.instana.io/instana/leader-elector:ppc64le-$VERSION"

                echo "---> Pushing multi-architectural manifest to containers.instana.io"
                docker manifest push --purge "containers.instana.io/instana/leader-elector:$VERSION"

      - put: leader-elector-repository
        params:
          repository: leader-elector-repository
          tag: leader-elector-repository/NEXT_VERSION
          only_tag: true
      - put: leader-elector-version
        params: {bump: patch}
      - put: slack-alert-team-agent
        params:
          channel: tech-agent-delivery-notifications
          text: New version of the Leader Elector image; ((.:new_leader_elector_version)) released!

